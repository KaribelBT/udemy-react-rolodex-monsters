{"ast":null,"code":"import _classCallCheck from\"/home/karibel/Dev/Udemy/React/practica-react-monsters-rolodex/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/karibel/Dev/Udemy/React/practica-react-monsters-rolodex/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/home/karibel/Dev/Udemy/React/practica-react-monsters-rolodex/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/karibel/Dev/Udemy/React/practica-react-monsters-rolodex/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import'./App.css';import{CardList}from'./components/card-list/card-list.component';import{SearchBox}from'./components/search-box/search-box.component';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var App=/*#__PURE__*/function(_Component){_inherits(App,_Component);var _super=_createSuper(App);function App(){var _this;_classCallCheck(this,App);_this=_super.call(this);//da acceso al state en el component\n_this.state={monsters:[],searchField:''};return _this;}_createClass(App,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;// call data when component inits\nfetch('https://jsonplaceholder.typicode.com/users').then(function(response){return response.json();}).then(function(users){return _this2.setState({monsters:users});});}},{key:\"render\",value:function render(){var _this3=this;var _this$state=this.state,monsters=_this$state.monsters,searchField=_this$state.searchField;var filteredMonsters=monsters.filter(function(monster){return monster.name.toLowerCase().includes(searchField.toLocaleLowerCase());});return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Monsters Rolodex\"}),/*#__PURE__*/_jsx(SearchBox,{placeholder:\"search Monsters\",handleChange:function handleChange(e){return _this3.setState({searchField:e.target.value},function(){return console.log(_this3.setState.searchField);}//setState es asincrono, por eso para usarlo se necesita el callback\n);}}),/*#__PURE__*/_jsx(CardList,{monsters:filteredMonsters})]});}}]);return App;}(Component);export default App;","map":{"version":3,"sources":["/home/karibel/Dev/Udemy/React/practica-react-monsters-rolodex/src/App.js"],"names":["React","Component","CardList","SearchBox","App","state","monsters","searchField","fetch","then","response","json","users","setState","filteredMonsters","filter","monster","name","toLowerCase","includes","toLocaleLowerCase","e","target","value","console","log"],"mappings":"gjBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,MAAO,WAAP,CACA,OAASC,QAAT,KAAyB,4CAAzB,CACA,OAASC,SAAT,KAA0B,8CAA1B,C,2FAEMC,CAAAA,G,0FACJ,cAAc,qCACZ,wBAAS;AACT,MAAKC,KAAL,CAAa,CACXC,QAAQ,CAAE,EADC,CAEXC,WAAW,CAAE,EAFF,CAAb,CAFY,aAMb,C,iDAED,4BAAoB,iBAAE;AACpBC,KAAK,CAAC,4CAAD,CAAL,CACCC,IADD,CACM,SAAAC,QAAQ,QAAIA,CAAAA,QAAQ,CAACC,IAAT,EAAJ,EADd,EAECF,IAFD,CAEM,SAAAG,KAAK,QAAI,CAAA,MAAI,CAACC,QAAL,CAAc,CAACP,QAAQ,CAAEM,KAAX,CAAd,CAAJ,EAFX,EAGD,C,sBAED,iBAAS,iBACP,gBAAkC,KAAKP,KAAvC,CAAQC,QAAR,aAAQA,QAAR,CAAkBC,WAAlB,aAAkBA,WAAlB,CACA,GAAMO,CAAAA,gBAAgB,CAAGR,QAAQ,CAACS,MAAT,CAAiB,SAAAC,OAAO,QAC/CA,CAAAA,OAAO,CAACC,IAAR,CAAaC,WAAb,GAA2BC,QAA3B,CAAoCZ,WAAW,CAACa,iBAAZ,EAApC,CAD+C,EAAxB,CAAzB,CAGA,mBACE,aAAK,SAAS,CAAC,KAAf,wBACE,wCADF,cAEE,KAAC,SAAD,EACA,WAAW,CAAC,iBADZ,CAEA,YAAY,CAAI,sBAAAC,CAAC,QAAG,CAAA,MAAI,CAACR,QAAL,CAChB,CAACN,WAAW,CAAEc,CAAC,CAACC,MAAF,CAASC,KAAvB,CADgB,CAEhB,iBAAKC,CAAAA,OAAO,CAACC,GAAR,CAAY,MAAI,CAACZ,QAAL,CAAcN,WAA1B,CAAL,EAA4C;AAF5B,CAAH,EAFjB,EAFF,cASE,KAAC,QAAD,EAAU,QAAQ,CAAEO,gBAApB,EATF,GADF,CAcD,C,iBAlCeb,S,EAqClB,cAAeG,CAAAA,GAAf","sourcesContent":["import React, { Component } from 'react'; \nimport './App.css';\nimport { CardList } from './components/card-list/card-list.component';\nimport { SearchBox } from './components/search-box/search-box.component';\n\nclass App extends Component {\n  constructor() {\n    super(); //da acceso al state en el component\n    this.state = {\n      monsters: [],\n      searchField: ''\n    }\n  }\n\n  componentDidMount() { // call data when component inits\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => response.json())\n    .then(users => this.setState({monsters: users}))\n  }\n\n  render() {\n    const { monsters, searchField } = this.state;\n    const filteredMonsters = monsters.filter( monster => \n      monster.name.toLowerCase().includes(searchField.toLocaleLowerCase())\n    )\n    return (\n      <div className='App'>\n        <h1>Monsters Rolodex</h1>\n        <SearchBox\n        placeholder='search Monsters'\n        handleChange = {e=> this.setState(\n            {searchField: e.target.value}, \n            ()=> console.log(this.setState.searchField) //setState es asincrono, por eso para usarlo se necesita el callback\n          )}\n        />\n        <CardList monsters={filteredMonsters}/>\n                  \n      </div>\n    );\n  }  \n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}